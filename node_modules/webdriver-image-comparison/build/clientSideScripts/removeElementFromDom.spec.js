"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var removeElementFromDom_1 = require("./removeElementFromDom");
describe('removeElementFromDom', function () {
    it('should be able to remove the custom css', function () {
        var id = 'test';
        var cssText = 'body:{width:100%}';
        var head = document.head || document.getElementsByTagName('head')[0];
        var style = document.createElement('style');
        style.id = id;
        style.appendChild(document.createTextNode(cssText));
        head.appendChild(style);
        expect(document.head.textContent).toMatchSnapshot();
        (0, removeElementFromDom_1.default)(id);
        expect(document.head.textContent).toMatchSnapshot();
    });
    it('should do nothing if custom css is not present', function () {
        var id = 'test';
        expect(document.head.textContent).toMatchSnapshot();
        (0, removeElementFromDom_1.default)(id);
        expect(document.head.textContent).toMatchSnapshot();
    });
    it('should do nothing if document.head is null', function () {
        var id = 'test';
        Object.defineProperty(document, 'head', { value: null });
        (0, removeElementFromDom_1.default)(id);
        expect(document.head).toBe(null);
    });
    it('should be able to remove an element from the body', function () {
        document.body.innerHTML =
            '<div>' +
                '   <span id="id-1">Hello</span>' +
                '   <span id="id-2">Hello</span>' +
                '   <div>' +
                '     <span id="id-3">Hello</span>' +
                '     <span id="id-4">Hello</span>' +
                '  </div>' +
                '</div>';
        expect(document.body).toMatchSnapshot();
        (0, removeElementFromDom_1.default)('id-1');
        expect(document.body).toMatchSnapshot();
    });
});
//# sourceMappingURL=removeElementFromDom.spec.js.map