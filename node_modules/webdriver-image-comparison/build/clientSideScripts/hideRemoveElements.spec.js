"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
var hideRemoveElements_1 = require("./hideRemoveElements");
describe('hideRemoveElements', function () {
    it('should be able to hide elements and put them back again', function () {
        document.body.innerHTML =
            '<div>' +
                '   <span id="id-1">Hello</span>' +
                '   <span id="id-2">Hello</span>' +
                '   <div>' +
                '     <span id="id-3">Hello</span>' +
                '     <span id="id-4">Hello</span>' +
                '  </div>' +
                '</div>';
        expect(document.querySelector('#id-1').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.visibility).toMatchSnapshot();
        (0, hideRemoveElements_1.default)({
            hide: [document.querySelector('#id-1'), document.querySelector('#id-3')],
            remove: [],
        }, true);
        expect(document.querySelector('#id-1').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.visibility).toMatchSnapshot();
        (0, hideRemoveElements_1.default)({
            hide: [document.querySelector('#id-1'), document.querySelector('#id-3')],
            remove: [],
        }, false);
        expect(document.querySelector('#id-1').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.visibility).toMatchSnapshot();
    });
    it('should be able to hide elements and put them back again when an array of hidden elements is provided', function () {
        document.body.innerHTML =
            '<div>' +
                '   <span class="hide">Hello</span>' +
                '   <span class="hide">Hello</span>' +
                '   <div>' +
                '     <span id="id-3">Hello</span>' +
                '     <span class="hide">Hello</span>' +
                '  </div>' +
                '</div>';
        expect(document.querySelectorAll('.hide')[0].style.visibility).toMatchSnapshot();
        expect(document.querySelectorAll('.hide')[1].style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.visibility).toMatchSnapshot();
        expect(document.querySelectorAll('.hide')[2].style.visibility).toMatchSnapshot();
        (0, hideRemoveElements_1.default)({
            hide: [__spreadArray([], document.querySelectorAll('.hide'), true)],
            remove: [],
        }, true);
        expect(document.querySelectorAll('.hide')[0].style.visibility).toMatchSnapshot();
        expect(document.querySelectorAll('.hide')[1].style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.visibility).toMatchSnapshot();
        expect(document.querySelectorAll('.hide')[2].style.visibility).toMatchSnapshot();
        (0, hideRemoveElements_1.default)({
            hide: [__spreadArray([], document.querySelectorAll('.hide'), true)],
            remove: [],
        }, false);
        expect(document.querySelectorAll('.hide')[0].style.visibility).toMatchSnapshot();
        expect(document.querySelectorAll('.hide')[1].style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.visibility).toMatchSnapshot();
        expect(document.querySelectorAll('.hide')[2].style.visibility).toMatchSnapshot();
    });
    it('should be able to remove elements and put them back again', function () {
        document.body.innerHTML =
            '<div>' +
                '   <span id="id-1">Hello</span>' +
                '   <span id="id-2">Hello</span>' +
                '   <div>' +
                '     <span id="id-3">Hello</span>' +
                '     <span id="id-4">Hello</span>' +
                '  </div>' +
                '</div>';
        expect(document.querySelector('#id-2').style.display).toMatchSnapshot();
        expect(document.querySelector('#id-4').style.display).toMatchSnapshot();
        (0, hideRemoveElements_1.default)({
            hide: [],
            remove: [
                document.querySelector('#id-2'),
                document.querySelector('#id-4'),
            ],
        }, true);
        expect(document.querySelector('#id-2').style.display).toMatchSnapshot();
        expect(document.querySelector('#id-4').style.display).toMatchSnapshot();
        (0, hideRemoveElements_1.default)({
            remove: [
                document.querySelector('#id-2'),
                document.querySelector('#id-4'),
            ],
            hide: [],
        }, false);
        expect(document.querySelector('#id-2').style.display).toMatchSnapshot();
        expect(document.querySelector('#id-4').style.display).toMatchSnapshot();
    });
    it('should be able to remove elements and put them back again when an array of to be removed elements is provided', function () {
        document.body.innerHTML =
            '<div>' +
                '   <span class="remove">Hello</span>' +
                '   <span class="remove">Hello</span>' +
                '   <div>' +
                '     <span id="id-3">Hello</span>' +
                '     <span class="remove">Hello</span>' +
                '  </div>' +
                '</div>';
        expect(document.querySelectorAll('.remove')[0].style.display).toMatchSnapshot();
        expect(document.querySelectorAll('.remove')[1].style.display).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.display).toMatchSnapshot();
        expect(document.querySelectorAll('.remove')[2].style.display).toMatchSnapshot();
        (0, hideRemoveElements_1.default)({
            remove: [__spreadArray([], document.querySelectorAll('.remove'), true)],
            hide: [],
        }, true);
        expect(document.querySelectorAll('.remove')[0].style.display).toMatchSnapshot();
        expect(document.querySelectorAll('.remove')[1].style.display).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.display).toMatchSnapshot();
        expect(document.querySelectorAll('.remove')[2].style.display).toMatchSnapshot();
        (0, hideRemoveElements_1.default)({
            remove: [__spreadArray([], document.querySelectorAll('.remove'), true)],
            hide: [],
        }, false);
        expect(document.querySelectorAll('.remove')[0].style.display).toMatchSnapshot();
        expect(document.querySelectorAll('.remove')[1].style.display).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.display).toMatchSnapshot();
        expect(document.querySelectorAll('.remove')[2].style.display).toMatchSnapshot();
    });
    it('should be able to find and hide single element based on xpath', function () {
        document.body.innerHTML =
            '<div>' +
                '   <span id="id-1">Hello</span>' +
                '   <span id="id-2">Hello</span>' +
                '   <div>' +
                '     <span id="id-3">Hello</span>' +
                '     <span id="id-4">Hello</span>' +
                '  </div>' +
                '</div>';
        expect(document.querySelector('#id-1').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.visibility).toMatchSnapshot();
        (0, hideRemoveElements_1.default)({
            hide: [{ selector: '//span[@id=\'id-1\']' }, { selector: '//span[@id=\'id-3\']' }],
            remove: [],
        }, true);
        expect(document.querySelector('#id-1').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.visibility).toMatchSnapshot();
    });
    it('should be able to find and hide elements based on xpath', function () {
        document.body.innerHTML =
            '<div>' +
                '   <span id="id-1">Hello</span>' +
                '   <span id="id-2">Hello</span>' +
                '   <div>' +
                '     <span id="id-3">Hello</span>' +
                '     <span id="id-4">Hello</span>' +
                '  </div>' +
                '</div>';
        expect(document.querySelector('#id-1').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-2').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-4').style.visibility).toMatchSnapshot();
        (0, hideRemoveElements_1.default)({
            hide: [[{ selector: '//span' }]],
            remove: [],
        }, true);
        expect(document.querySelector('#id-1').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-2').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-4').style.visibility).toMatchSnapshot();
    });
    it('should be able to find and hide a single element based on a css selector', function () {
        document.body.innerHTML =
            '<div>' +
                '   <span id="id-1">Hello</span>' +
                '   <span id="id-2">Hello</span>' +
                '   <div>' +
                '     <span id="id-3">Hello</span>' +
                '     <span class="hide">Hello</span>' +
                '  </div>' +
                '</div>';
        expect(document.querySelector('#id-1').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-2').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.visibility).toMatchSnapshot();
        expect(document.querySelector('.hide').style.visibility).toMatchSnapshot();
        (0, hideRemoveElements_1.default)({
            hide: [{ selector: '.hide' }],
            remove: [],
        }, true);
        expect(document.querySelector('#id-1').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-2').style.visibility).toMatchSnapshot();
        expect(document.querySelector('#id-3').style.visibility).toMatchSnapshot();
        expect(document.querySelector('.hide').style.visibility).toMatchSnapshot();
    });
    it('should be able to find and hide elements based on a css selector', function () {
        document.body.innerHTML =
            '<div>' +
                '   <span class="hide">Hello</span>' +
                '   <span class="hide">Hello</span>' +
                '   <div>' +
                '     <span class="hide">Hello</span>' +
                '     <span class="hide">Hello</span>' +
                '  </div>' +
                '</div>';
        expect(document.querySelectorAll('.hide')).toMatchSnapshot();
        (0, hideRemoveElements_1.default)({
            hide: [[{ selector: '.hide' }, { selector: '.hide' }]],
            remove: [],
        }, true);
        expect(document.querySelectorAll('.hide')).toMatchSnapshot();
    });
});
//# sourceMappingURL=hideRemoveElements.spec.js.map