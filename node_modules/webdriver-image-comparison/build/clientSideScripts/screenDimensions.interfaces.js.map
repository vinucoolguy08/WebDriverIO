{"version":3,"file":"screenDimensions.interfaces.js","sourceRoot":"","sources":["../../lib/clientSideScripts/screenDimensions.interfaces.ts"],"names":[],"mappings":"","sourcesContent":["export interface ScreenDimensions {\n  dimensions: {\n    body: {\n      // Minimum height the element would require in order to fit all the content in the viewport without using a vertical scrollbar.\n      // The height is measured in the same way as clientHeight: it includes the element's padding, but not its border, margin or\n      // horizontal scrollbar (if present). It can also include the height of pseudo-elements such as ::before or ::after.\n      // If the element's content can fit without a need for vertical scrollbar, its scrollHeight is equal to clientHeight\n      scrollHeight?: number;\n      // measurement in pixels of the element's CSS height, including any borders, padding, and horizontal scrollbars (if rendered).\n      // It does not include the height of pseudo-elements such as ::before or ::after. For the document body object, the measurement\n      // includes total linear content height instead of the element's CSS height. Floated elements extending below other\n      // linear content are ignored\n      offsetHeight?: number\n    };\n    html: {\n      // Inner width of an element in pixels. It includes padding but excludes borders, margins, and vertical scrollbars (if present)\n      clientWidth?: number;\n      // The width is measured in the same way as clientWidth: it includes the element's padding, but not its border, margin or vertical\n      // scrollbar (if present). It can also include the width of pseudo-elements such as ::before or ::after. If the element's content\n      // can fit without a need for horizontal scrollbar, its scrollWidth is equal to clientWidth\n      scrollWidth?: number;\n      // Inner height of an element in pixels. It includes padding but excludes borders, margins, and horizontal scrollbars (if present)\n      clientHeight?: number;\n      // The height is measured in the same way as clientHeight: it includes the element's padding, but not its border, margin or\n      // horizontal scrollbar (if present). It can also include the height of pseudo-elements such as ::before or ::after. If the element's\n      // content can fit without a need for vertical scrollbar, its scrollHeight is equal to clientHeight\n      scrollHeight?: number;\n      // Measurement in pixels of the element's CSS height, including any borders, padding, and horizontal scrollbars (if rendered).\n      // It does not include the height of pseudo-elements such as ::before or ::after. For the document body object, the measurement\n      // includes total linear content height instead of the element's CSS height. Floated elements extending below other linear\n      // content are ignored\n      offsetHeight?: number\n    };\n    window: {\n      // Width (in pixels) of the browser window viewport including, if rendered, the vertical scrollbar.\n      innerWidth?: number;\n      // Height (in pixels) of the browser window viewport including, if rendered, the horizontal scrollbar.\n      innerHeight?: number;\n      // Width of the outside of the browser window. It represents the width of the whole browser window including sidebar (if expanded),\n      // window chrome and window resizing borders/handles.\n      outerWidth?: number;\n      // Height in pixels of the whole browser window. It represents the height of the whole browser window including sidebar\n      // (if expanded), window chrome and window resizing borders/handles.\n      outerHeight?: number;\n      // The ratio of the resolution in physical pixels to the resolution in CSS pixels for the current display device.\n      devicePixelRatio?: number;\n      // The width of the screen\n      screenWidth?: number;\n      // The height of the screen\n      screenHeight?: number\n    }\n  };\n}\n"]}