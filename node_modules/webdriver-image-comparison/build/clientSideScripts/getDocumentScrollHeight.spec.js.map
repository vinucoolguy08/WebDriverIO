{"version":3,"file":"getDocumentScrollHeight.spec.js","sourceRoot":"","sources":["../../lib/clientSideScripts/getDocumentScrollHeight.spec.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,qEAAgE;AAChE,wCAA4C;AAE5C,QAAQ,CAAC,yBAAyB,EAAE;IAClC,EAAE,CAAC,oCAAoC,EAAE;QAEvC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,eAAe,EAAE,cAAc,aAAG,KAAK,EAAE,GAAG,IAAK,oBAAY,EAAE,CAAC;QAC/F,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,aAAG,KAAK,EAAE,GAAG,IAAK,oBAAY,EAAE,CAAC;QAE5E,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,eAAe,EAAE,cAAc,aAAG,KAAK,EAAE,GAAG,IAAK,oBAAY,EAAE,CAAC;QAE/F,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,EAAE,cAAc,aAAG,KAAK,EAAE,IAAI,IAAK,oBAAY,EAAE,CAAC;QAErF,MAAM,CAAC,IAAA,iCAAuB,GAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE;QAEnC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,eAAe,EAAE,cAAc,aAAG,KAAK,EAAE,GAAG,IAAK,oBAAY,EAAE,CAAC;QAC/F,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,aAAG,KAAK,EAAE,GAAG,IAAK,oBAAY,EAAE,CAAC;QAE5E,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,eAAe,EAAE,cAAc,aAAG,KAAK,EAAE,IAAI,IAAK,oBAAY,EAAE,CAAC;QAEhG,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,EAAE,cAAc,aAAG,KAAK,EAAE,IAAI,IAAK,oBAAY,EAAE,CAAC;QAErF,MAAM,CAAC,IAAA,iCAAuB,GAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE;QAEjD,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,eAAe,EAAE,cAAc,aAAG,KAAK,EAAE,IAAI,IAAK,oBAAY,EAAE,CAAC;QAChG,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,aAAG,KAAK,EAAE,IAAI,IAAK,oBAAY,EAAE,CAAC;QAE7E,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,eAAe,EAAE,cAAc,aAAG,KAAK,EAAE,IAAI,IAAK,oBAAY,EAAE,CAAC;QAEhG,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,EAAE,cAAc,aAAG,KAAK,EAAE,IAAI,IAAK,oBAAY,EAAE,CAAC;QACrF,QAAQ,CAAC,IAAI,CAAC,SAAS;YACrB,OAAO;gBACP,6CAA6C;gBAC7C,6CAA6C;gBAC7C,QAAQ,CAAC;QAGX,IAAA,iCAAuB,GAAE,CAAC;IAC5B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import getDocumentScrollHeight from './getDocumentScrollHeight';\nimport {CONFIGURABLE} from \"../mocks/mocks\";\n\ndescribe('getDocumentScrollHeight', () => {\n  it('should return the bodyScrollHeight', () => {\n    // For viewPortHeight\n    Object.defineProperty(document.documentElement, 'clientHeight', {value: 500, ...CONFIGURABLE});\n    Object.defineProperty(window, 'innerHeight', {value: 500, ...CONFIGURABLE});\n    // For scrollHeight\n    Object.defineProperty(document.documentElement, 'scrollHeight', {value: 500, ...CONFIGURABLE});\n    // For bodyScrollHeight\n    Object.defineProperty(document.body, 'scrollHeight', {value: 1500, ...CONFIGURABLE});\n\n    expect(getDocumentScrollHeight()).toEqual(1500);\n  });\n\n  it('should return the scrollHeight', () => {\n    // For viewPortHeight\n    Object.defineProperty(document.documentElement, 'clientHeight', {value: 500, ...CONFIGURABLE});\n    Object.defineProperty(window, 'innerHeight', {value: 500, ...CONFIGURABLE});\n    // For scrollHeight\n    Object.defineProperty(document.documentElement, 'scrollHeight', {value: 2250, ...CONFIGURABLE});\n    // For bodyScrollHeight\n    Object.defineProperty(document.body, 'scrollHeight', {value: 1500, ...CONFIGURABLE});\n\n    expect(getDocumentScrollHeight()).toEqual(2250);\n  });\n\n  it('should return the height of the largest node', () => {\n    // For viewPortHeight\n    Object.defineProperty(document.documentElement, 'clientHeight', {value: 1500, ...CONFIGURABLE});\n    Object.defineProperty(window, 'innerHeight', {value: 1500, ...CONFIGURABLE});\n    // For scrollHeight\n    Object.defineProperty(document.documentElement, 'scrollHeight', {value: 1500, ...CONFIGURABLE});\n    // For bodyScrollHeight\n    Object.defineProperty(document.body, 'scrollHeight', {value: 1500, ...CONFIGURABLE});\n    document.body.innerHTML =\n      '<div>' +\n      '  <span style=\"height: 200px;width: 50px\"/>' +\n      '  <div style=\"height: 500px;width: 50px\" />' +\n      '</div>';\n\n    // Some lines and the outcome can't be tested because we can't mock `scrollHeight` and `clientHeight`\n    getDocumentScrollHeight();\n  });\n});\n"]}