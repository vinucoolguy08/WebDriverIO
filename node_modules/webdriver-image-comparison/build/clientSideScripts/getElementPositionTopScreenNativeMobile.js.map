{"version":3,"file":"getElementPositionTopScreenNativeMobile.js","sourceRoot":"","sources":["../../lib/clientSideScripts/getElementPositionTopScreenNativeMobile.ts"],"names":[],"mappings":";;;AAMA,SAAgB,uCAAuC,CACrD,yBAAiC,EACjC,OAAoB;IAGd,IAAA,KAAkB,MAAM,CAAC,MAAM,EAA9B,KAAK,WAAA,EAAE,MAAM,YAAiB,CAAC;IAC/B,IAAA,WAAW,GAAI,MAAM,YAAV,CAAW;IAG7B,IAAM,eAAe,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;IACxD,IAAI,CAAC,CAAC;IAEN,IAAI,MAAM,KAAK,WAAW,IAAI,KAAK,KAAK,WAAW,EAAE;QAEnD,CAAC,GAAG,eAAe,CAAC,GAAG,CAAC;KACzB;SAAM;QACL,CAAC,GAAG,yBAAyB,GAAG,eAAe,CAAC,GAAG,CAAC;KACrD;IAED,OAAO;QACL,MAAM,EAAE,eAAe,CAAC,MAAM;QAC9B,KAAK,EAAE,eAAe,CAAC,KAAK;QAC5B,CAAC,EAAE,eAAe,CAAC,IAAI;QACvB,CAAC,EAAE,CAAC;KACL,CAAC;AACJ,CAAC;AAzBD,0FAyBC","sourcesContent":["import {ElementPosition} from './elementPosition.interfaces';\n\n/**\n * Get the element position to the top of the screen of the device, not the top of the webview\n * This method is used for Android native and iOS screenshots\n */\nexport function getElementPositionTopScreenNativeMobile(\n  statusBarAddressBarHeight: number,\n  element: HTMLElement,\n): ElementPosition {\n  // Get some heights and widths\n  const {width, height} = window.screen;\n  const {innerHeight} = window;\n\n  // Determine element position\n  const elementPosition = element.getBoundingClientRect();\n  let y;\n\n  if (height === innerHeight || width === innerHeight) {\n    /* an app with a transparent statusbar */\n    y = elementPosition.top;\n  } else {\n    y = statusBarAddressBarHeight + elementPosition.top;\n  }\n\n  return {\n    height: elementPosition.height,\n    width: elementPosition.width,\n    x: elementPosition.left,\n    y: y\n  };\n}\n"]}