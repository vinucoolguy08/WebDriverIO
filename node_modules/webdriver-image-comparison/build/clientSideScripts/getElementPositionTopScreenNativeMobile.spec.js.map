{"version":3,"file":"getElementPositionTopScreenNativeMobile.spec.js","sourceRoot":"","sources":["../../lib/clientSideScripts/getElementPositionTopScreenNativeMobile.spec.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,wCAAyD;AACzD,qGAAkG;AAElG,QAAQ,CAAC,yCAAyC,EAAE;IAClD,UAAU,CAAC;QACT,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,aAAG,KAAK,EAAE,mBAAW,CAAC,MAAM,CAAC,KAAK,IAAK,oBAAY,EAAE,CAAC;QAClG,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,aAAG,KAAK,EAAE,mBAAW,CAAC,MAAM,CAAC,MAAM,IAAK,oBAAY,EAAE,CAAC;QAEpG,OAAO,CAAC,SAAS,CAAC,qBAAqB,GAAG,IAAI,CAAC,EAAE,CAAC;YAChD,OAAO;gBACL,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,GAAG;gBACX,GAAG,EAAE,EAAE;gBACP,IAAI,EAAE,GAAG;gBACT,MAAM,EAAE,CAAC;gBACT,KAAK,EAAE,EAAE;aACV,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,IAAI,CAAC,SAAS;YACrB,OAAO;gBACP,oCAAoC;gBACpC,QAAQ,CAAC;IACb,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+EAA+E,EAAE;QAClF,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,aAAG,KAAK,EAAE,mBAAW,CAAC,MAAM,CAAC,WAAW,IAAK,oBAAY,EAAE,CAAC;QAEvG,MAAM,CAAC,IAAA,iFAAuC,EAAC,EAAE,EAAE,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;IAC7G,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sFAAsF,EAAE;QACzF,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,aAAG,KAAK,EAAE,mBAAW,CAAC,MAAM,CAAC,MAAM,IAAK,oBAAY,EAAE,CAAC;QAElG,MAAM,CAAC,IAAA,iFAAuC,EAAC,EAAE,EAAE,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;IAC7G,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uFAAuF,EAAE;QAC1F,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,aAAG,KAAK,EAAE,mBAAW,CAAC,MAAM,CAAC,KAAK,IAAK,oBAAY,EAAE,CAAC;QAEjG,MAAM,CAAC,IAAA,iFAAuC,EAAC,EAAE,EAAE,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;IAC7G,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {IOS_DEVICES, CONFIGURABLE} from '../mocks/mocks';\nimport {getElementPositionTopScreenNativeMobile} from './getElementPositionTopScreenNativeMobile';\n\ndescribe('getElementPositionTopScreenNativeMobile', () => {\n  beforeEach(()=>{\n    Object.defineProperty(window.screen, 'width', {value: IOS_DEVICES.IPHONE.width, ...CONFIGURABLE});\n    Object.defineProperty(window.screen, 'height', {value: IOS_DEVICES.IPHONE.height, ...CONFIGURABLE});\n    // @ts-ignore\n    Element.prototype.getBoundingClientRect = jest.fn(() => {\n      return {\n        width: 120,\n        height: 120,\n        top: 10,\n        left: 100,\n        bottom: 5,\n        right: 12,\n      };\n    });\n    document.body.innerHTML =\n      '<div>' +\n      '  <span id=\"username\">Hello</span>' +\n      '</div>';\n  });\n\n  it('should get the element position to the top of the screen for a mobile browser', () => {\n    Object.defineProperty(window, 'innerHeight', {value: IOS_DEVICES.IPHONE.innerHeight, ...CONFIGURABLE});\n\n    expect(getElementPositionTopScreenNativeMobile(94, document.querySelector('#username'))).toMatchSnapshot();\n  });\n\n  it('should get the element position to the top of the screen for an app in portrait mode', () => {\n    Object.defineProperty(window, 'innerHeight', {value: IOS_DEVICES.IPHONE.height, ...CONFIGURABLE});\n\n    expect(getElementPositionTopScreenNativeMobile(94, document.querySelector('#username'))).toMatchSnapshot();\n  });\n\n  it('should get the element position to the top of the screen for an app in landscape mode', () => {\n    Object.defineProperty(window, 'innerHeight', {value: IOS_DEVICES.IPHONE.width, ...CONFIGURABLE});\n\n    expect(getElementPositionTopScreenNativeMobile(94, document.querySelector('#username'))).toMatchSnapshot();\n  });\n});\n"]}