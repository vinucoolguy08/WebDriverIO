{"version":3,"file":"beforeScreenshot.spec.js","sourceRoot":"","sources":["../../lib/helpers/beforeScreenshot.spec.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uDAAkD;AAClD,yDAA6C;AAE7C,QAAQ,CAAC,kBAAkB,EAAE;IAC3B,EAAE,CAAC,0EAA0E,EAAE;;;;;oBACvE,eAAe,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;oBAEhD,OAAO,GAAG;wBACd,YAAY,EAAE;4BACZ,WAAW,EAAE,aAAa;4BAC1B,cAAc,EAAE,gBAAgB;4BAChC,UAAU,EAAE,YAAY;4BACxB,OAAO,EAAE,SAAS;4BAClB,IAAI,EAAE,MAAM;4BACZ,mBAAmB,EAAE,KAAK;4BAC1B,YAAY,EAAE,cAAc;4BAC5B,eAAe,EAAE,iBAAiB;yBACnC;wBACD,uBAAuB,EAAE,CAAC;wBAC1B,mBAAmB,EAAE,IAAI;wBACzB,QAAQ,EAAE,4BAAQ,CAAC,KAAK;wBACxB,YAAY,EAAE,IAAI;wBAClB,oBAAoB,EAAE,CAAC;wBACvB,YAAY,EAAE,CAAmB,aAAa,CAAC;wBAC/C,cAAc,EAAE,CAAmB,aAAa,CAAC;qBAClD,CAAC;oBAEF,KAAA,MAAM,CAAA;oBAAC,WAAM,IAAA,0BAAgB,EAAC,eAAe,EAAE,OAAO,CAAC,EAAA;;oBAAvD,kBAAO,SAAgD,EAAC,CAAC,eAAe,EAAE,CAAC;;;;SAC5E,CAAC,CAAC;IAEH,EAAE,CAAC,mFAAmF,EAAE;;;;;oBAChF,eAAe,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;oBAEhD,OAAO,GAAG;wBACd,YAAY,EAAE;4BACZ,WAAW,EAAE,aAAa;4BAC1B,cAAc,EAAE,gBAAgB;4BAChC,UAAU,EAAE,YAAY;4BACxB,OAAO,EAAE,SAAS;4BAClB,IAAI,EAAE,MAAM;4BACZ,mBAAmB,EAAE,KAAK;4BAC1B,YAAY,EAAE,cAAc;4BAC5B,eAAe,EAAE,iBAAiB;yBACnC;wBACD,uBAAuB,EAAE,CAAC;wBAC1B,mBAAmB,EAAE,IAAI;wBACzB,YAAY,EAAE,IAAI;wBAClB,QAAQ,EAAE,4BAAQ,CAAC,KAAK;wBACxB,oBAAoB,EAAE,CAAC;wBACvB,YAAY,EAAE,CAAmB,aAAa,CAAC;wBAC/C,cAAc,EAAE,CAAmB,aAAa,CAAC;qBAClD,CAAC;oBAEF,KAAA,MAAM,CAAA;oBAAC,WAAM,IAAA,0BAAgB,EAAC,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,EAAA;;oBAA7D,kBAAO,SAAsD,EAAC,CAAC,eAAe,EAAE,CAAC;;;;SAClF,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import beforeScreenshot from './beforeScreenshot';\nimport {LogLevel} from \"./options.interface\";\n\ndescribe('beforeScreenshot', () => {\n  it('should be able to return the enriched instance data with default options', async () => {\n    const MOCKED_EXECUTOR = jest.fn().mockReturnValue('');\n\n    const options = {\n      instanceData: {\n        browserName: 'browserName',\n        browserVersion: 'browserVersion',\n        deviceName: 'deviceName',\n        logName: 'logName',\n        name: 'name',\n        nativeWebScreenshot: false,\n        platformName: 'platformName',\n        platformVersion: 'platformVersion',\n      },\n      addressBarShadowPadding: 6,\n      disableCSSAnimation: true,\n      logLevel: LogLevel.debug,\n      noScrollBars: true,\n      toolBarShadowPadding: 6,\n      hideElements: [<HTMLElement><any>'<div></div>'],\n      removeElements: [<HTMLElement><any>'<div></div>'],\n    };\n\n    expect(await beforeScreenshot(MOCKED_EXECUTOR, options)).toMatchSnapshot();\n  });\n\n  it('should be able to return the enriched instance data with `addShadowPadding: true`', async () => {\n    const MOCKED_EXECUTOR = jest.fn().mockReturnValue('');\n\n    const options = {\n      instanceData: {\n        browserName: 'browserName',\n        browserVersion: 'browserVersion',\n        deviceName: 'deviceName',\n        logName: 'logName',\n        name: 'name',\n        nativeWebScreenshot: false,\n        platformName: 'platformName',\n        platformVersion: 'platformVersion',\n      },\n      addressBarShadowPadding: 6,\n      disableCSSAnimation: true,\n      noScrollBars: true,\n      logLevel: LogLevel.debug,\n      toolBarShadowPadding: 6,\n      hideElements: [<HTMLElement><any>'<div></div>'],\n      removeElements: [<HTMLElement><any>'<div></div>'],\n    };\n\n    expect(await beforeScreenshot(MOCKED_EXECUTOR, options, true)).toMatchSnapshot();\n  });\n});\n"]}