{"version":3,"file":"base.spec.js","sourceRoot":"","sources":["../lib/base.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {ensureDirSync, pathExistsSync} from 'fs-extra';\nimport {join} from 'path';\nimport BaseClass from './base';\n\ndescribe('BaseClass', () => {\n  it('should be able to create BaseClass with options', () => {\n    const instance = new BaseClass({\n      baselineFolder: './subfolder//../baseline',\n      screenshotPath: './../my_folder//screenshots'\n    });\n    expect(instance.folders.actualFolder).toBe('../my_folder/screenshots/actual');\n    expect(instance.folders.baselineFolder).toBe('baseline');\n    expect(instance.folders.diffFolder).toBe('../my_folder/screenshots/diff');\n  });\n\n  it('should be able to create baselineFolder with a function', () => {\n    const options = {\n      baseline: './subfolder//../baseline',\n      screenshot: './../my_folder//screenshots'\n    };\n    const setPath = (folderPath: any) => {\n      return folderPath;\n    };\n    const instance = new BaseClass({\n      baselineFolder: setPath(options.baseline),\n      screenshotPath: setPath(options.screenshot)\n    });\n    expect(instance.folders.actualFolder).toBe('../my_folder/screenshots/actual');\n    expect(instance.folders.baselineFolder).toBe('baseline');\n    expect(instance.folders.diffFolder).toBe('../my_folder/screenshots/diff');\n  });  \n\n  it('should be able to create BaseClass with default options', () => {\n    const instance = new BaseClass({});\n    expect(instance.folders.actualFolder).toBe('.tmp/actual');\n    expect(instance.folders.baselineFolder).toBe('wic/baseline/');\n    expect(instance.folders.diffFolder).toBe('.tmp/diff');\n  });\n\n  it('should remove the actual and diff folder if this is needed', () => {\n    // Create the folders\n    const actual = join(process.cwd(), '/.tmp/actual');\n    const diff = join(process.cwd(), '/.tmp/diff');\n    ensureDirSync(actual);\n    ensureDirSync(diff);\n\n    expect(pathExistsSync(actual)).toEqual(true);\n    expect(pathExistsSync(diff)).toEqual(true);\n\n    const instance = new BaseClass({clearRuntimeFolder: true});\n\n    expect(pathExistsSync(actual)).toEqual(false);\n    expect(pathExistsSync(diff)).toEqual(false);\n  });\n});\n"]}