{"version":3,"file":"saveElement.js","sourceRoot":"","sources":["../../lib/commands/saveElement.ts"],"names":[],"mappings":"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","sourcesContent":["import {takeBase64Screenshot} from '../methods/screenshots';\nimport {makeCroppedBase64Image} from '../methods/images';\nimport beforeScreenshot from '../helpers/beforeScreenshot';\nimport afterScreenshot from '../helpers/afterScreenshot';\nimport {determineElementRectangles} from '../methods/rectangles';\nimport {AfterScreenshotOptions, ScreenshotOutput} from '../helpers/afterScreenshot.interfaces';\nimport {Methods} from '../methods/methods.interface';\nimport {InstanceData} from '../methods/instanceData.interfaces';\nimport {Folders} from '../base.interface';\nimport {SaveElementOptions} from './element.interfaces';\nimport {ElementRectanglesOptions, RectanglesOutput} from '../methods/rectangles.interfaces';\nimport {BeforeScreenshotOptions, BeforeScreenshotResult} from '../helpers/beforeScreenshot.interface';\nimport {DEFAULT_RESIZE_DIMENSIONS} from '../helpers/constants';\nimport {ResizeDimensions} from '../methods/images.interfaces';\n\n/**\n * Saves an image of an element\n */\nexport default async function saveElement(\n  methods: Methods,\n  instanceData: InstanceData,\n  folders: Folders,\n  element: HTMLElement,\n  tag: string,\n  saveElementOptions: SaveElementOptions,\n): Promise<ScreenshotOutput> {\n\n  // 1a. Set some variables\n  const {addressBarShadowPadding, formatImageName, logLevel, savePerInstance, toolBarShadowPadding} = saveElementOptions.wic;\n\n  // 1b. Set the method options to the right values\n  const disableCSSAnimation: boolean = 'disableCSSAnimation' in saveElementOptions.method\n    ? saveElementOptions.method.disableCSSAnimation\n    : saveElementOptions.wic.disableCSSAnimation;\n  const hideScrollBars: boolean = 'hideScrollBars' in saveElementOptions.method\n    ? saveElementOptions.method.hideScrollBars\n    : saveElementOptions.wic.hideScrollBars;\n  const resizeDimensions: ResizeDimensions | number = saveElementOptions.method.resizeDimensions || DEFAULT_RESIZE_DIMENSIONS;\n  const hideElements: HTMLElement[] = saveElementOptions.method.hideElements || [];\n  const removeElements: HTMLElement[] = saveElementOptions.method.removeElements || [];\n\n  // 2.  Prepare the beforeScreenshot\n  const beforeOptions: BeforeScreenshotOptions = {\n    instanceData,\n    addressBarShadowPadding,\n    disableCSSAnimation,\n    hideElements,\n    logLevel,\n    noScrollBars: hideScrollBars,\n    removeElements,\n    toolBarShadowPadding,\n  };\n  const enrichedInstanceData: BeforeScreenshotResult = await beforeScreenshot(methods.executor, beforeOptions, true);\n\n  // 3.  Take the screenshot\n  const base64Image: string = await takeBase64Screenshot(methods.screenShot);\n\n  // 4.  Determine the rectangles\n  const elementRectangleOptions: ElementRectanglesOptions = {\n    devicePixelRatio: enrichedInstanceData.dimensions.window.devicePixelRatio,\n    innerHeight: enrichedInstanceData.dimensions.window.innerHeight,\n    isAndroidNativeWebScreenshot: enrichedInstanceData.isAndroidNativeWebScreenshot,\n    isAndroid: enrichedInstanceData.isAndroid,\n    isIos: enrichedInstanceData.isIos,\n  };\n  const rectangles: RectanglesOutput = await determineElementRectangles({\n    executor: methods.executor,\n    base64Image,\n    options: elementRectangleOptions,\n    element\n  });\n\n  // 5.  Make a cropped base64 image with resizeDimensions\n  const croppedBase64Image = await makeCroppedBase64Image({base64Image, rectangles, logLevel, resizeDimensions});\n\n  // 6.  The after the screenshot methods\n  const afterOptions: AfterScreenshotOptions = {\n    actualFolder: folders.actualFolder,\n    base64Image: croppedBase64Image,\n    disableCSSAnimation,\n    hideElements,\n    hideScrollBars,\n    filePath: {\n      browserName: enrichedInstanceData.browserName,\n      deviceName: enrichedInstanceData.deviceName,\n      isMobile: enrichedInstanceData.isMobile,\n      savePerInstance: savePerInstance,\n    },\n    fileName: {\n      browserName: enrichedInstanceData.browserName,\n      browserVersion: enrichedInstanceData.browserVersion,\n      deviceName: enrichedInstanceData.deviceName,\n      devicePixelRatio: enrichedInstanceData.dimensions.window.devicePixelRatio,\n      formatImageName,\n      isMobile: enrichedInstanceData.isMobile,\n      isTestInBrowser: enrichedInstanceData.isTestInBrowser,\n      logName: enrichedInstanceData.logName,\n      name: enrichedInstanceData.name,\n      outerHeight: enrichedInstanceData.dimensions.window.outerHeight,\n      outerWidth: enrichedInstanceData.dimensions.window.outerWidth,\n      platformName: enrichedInstanceData.platformName,\n      platformVersion: enrichedInstanceData.platformVersion,\n      screenHeight: enrichedInstanceData.dimensions.window.screenHeight,\n      screenWidth: enrichedInstanceData.dimensions.window.screenWidth,\n      tag,\n    },\n    logLevel,\n    platformName: instanceData.platformName,\n    removeElements,\n  };\n\n  // 7.  Return the data\n  return afterScreenshot(methods.executor, afterOptions);\n}\n"]}