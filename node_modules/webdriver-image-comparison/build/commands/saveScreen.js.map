{"version":3,"file":"saveScreen.js","sourceRoot":"","sources":["../../lib/commands/saveScreen.ts"],"names":[],"mappings":"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","sourcesContent":["import {takeBase64Screenshot} from '../methods/screenshots';\nimport {makeCroppedBase64Image} from '../methods/images';\nimport beforeScreenshot from '../helpers/beforeScreenshot';\nimport afterScreenshot from '../helpers/afterScreenshot';\nimport {determineScreenRectangles} from '../methods/rectangles';\nimport {Methods} from '../methods/methods.interface';\nimport {Folders} from '../base.interface';\nimport {SaveScreenOptions} from './screen.interfaces';\nimport {BeforeScreenshotOptions, BeforeScreenshotResult} from '../helpers/beforeScreenshot.interface';\nimport {InstanceData} from '../methods/instanceData.interfaces';\nimport {AfterScreenshotOptions, ScreenshotOutput} from '../helpers/afterScreenshot.interfaces';\nimport {RectanglesOutput, ScreenRectanglesOptions} from '../methods/rectangles.interfaces';\n\n/**\n * Saves an image of the viewport of the screen\n */\nexport default async function saveScreen(\n  methods: Methods,\n  instanceData: InstanceData,\n  folders: Folders,\n  tag: string,\n  saveScreenOptions: SaveScreenOptions\n): Promise<ScreenshotOutput> {\n\n  // 1a. Set some variables\n  const {addressBarShadowPadding, formatImageName, logLevel, savePerInstance, toolBarShadowPadding} = saveScreenOptions.wic;\n\n  // 1b. Set the method options to the right values\n  const disableCSSAnimation: boolean = 'disableCSSAnimation' in saveScreenOptions.method\n    ? saveScreenOptions.method.disableCSSAnimation\n    : saveScreenOptions.wic.disableCSSAnimation;\n  const hideScrollBars: boolean = 'hideScrollBars' in saveScreenOptions.method\n    ? saveScreenOptions.method.hideScrollBars\n    : saveScreenOptions.wic.hideScrollBars;\n  const hideElements: HTMLElement[] = saveScreenOptions.method.hideElements || [];\n  const removeElements: HTMLElement[] = saveScreenOptions.method.removeElements || [];\n\n  // 2.  Prepare the beforeScreenshot\n  const beforeOptions: BeforeScreenshotOptions = {\n    instanceData,\n    addressBarShadowPadding,\n    disableCSSAnimation,\n    hideElements,\n    logLevel,\n    noScrollBars: hideScrollBars,\n    removeElements,\n    toolBarShadowPadding,\n  };\n  const enrichedInstanceData: BeforeScreenshotResult = await beforeScreenshot(methods.executor, beforeOptions);\n\n  // 3.  Take the screenshot\n  const base64Image:string = await takeBase64Screenshot(methods.screenShot);\n\n  // Determine the rectangles\n  const screenRectangleOptions: ScreenRectanglesOptions = {\n    devicePixelRatio: enrichedInstanceData.dimensions.window.devicePixelRatio,\n    innerHeight: enrichedInstanceData.dimensions.window.innerHeight,\n    innerWidth: enrichedInstanceData.dimensions.window.innerWidth,\n    isAndroidChromeDriverScreenshot: enrichedInstanceData.isAndroidChromeDriverScreenshot,\n    isAndroidNativeWebScreenshot: enrichedInstanceData.isAndroidNativeWebScreenshot,\n    isIos: enrichedInstanceData.isIos,\n  };\n  const rectangles: RectanglesOutput = determineScreenRectangles(base64Image, screenRectangleOptions);\n\n  // 4.  Make a cropped base64 image\n  const croppedBase64Image: string = await makeCroppedBase64Image({base64Image, rectangles, logLevel});\n\n  // 5.  The after the screenshot methods\n  const afterOptions: AfterScreenshotOptions = {\n    actualFolder: folders.actualFolder,\n    base64Image: croppedBase64Image,\n    disableCSSAnimation,\n    hideElements,\n    hideScrollBars,\n    filePath: {\n      browserName: enrichedInstanceData.browserName,\n      deviceName: enrichedInstanceData.deviceName,\n      isMobile: enrichedInstanceData.isMobile,\n      savePerInstance,\n    },\n    fileName: {\n      browserName: enrichedInstanceData.browserName,\n      browserVersion: enrichedInstanceData.browserVersion,\n      deviceName: enrichedInstanceData.deviceName,\n      devicePixelRatio: enrichedInstanceData.dimensions.window.devicePixelRatio,\n      formatImageName,\n      isMobile: enrichedInstanceData.isMobile,\n      isTestInBrowser: enrichedInstanceData.isTestInBrowser,\n      logName: enrichedInstanceData.logName,\n      name: enrichedInstanceData.name,\n      outerHeight: enrichedInstanceData.dimensions.window.outerHeight,\n      outerWidth: enrichedInstanceData.dimensions.window.outerWidth,\n      platformName: enrichedInstanceData.platformName,\n      platformVersion: enrichedInstanceData.platformVersion,\n      screenHeight: enrichedInstanceData.dimensions.window.screenHeight,\n      screenWidth: enrichedInstanceData.dimensions.window.screenWidth,\n      tag,\n    },\n    logLevel,\n    platformName: instanceData.platformName,\n    removeElements,\n  };\n\n  // 6.  Return the data\n  return afterScreenshot(methods.executor, afterOptions);\n}\n"]}