{"version":3,"file":"checkScreen.js","sourceRoot":"","sources":["../../lib/commands/checkScreen.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAAsC;AACtC,4CAAsD;AACtD,0CAA+C;AAM/C,8CAA8D;AAK9D,SAA8B,WAAW,CACvC,OAAgB,EAChB,YAA0B,EAC1B,OAAgB,EAChB,GAAW,EACX,kBAAsC;;;;;;oBAIhC,iBAAiB,GAAsB;wBAC3C,GAAG,EAAE,kBAAkB,CAAC,GAAG;wBAC3B,MAAM,0CACD,CAAC,qBAAqB,IAAI,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,mBAAmB,EAAE,kBAAkB,CAAC,MAAM,CAAC,mBAAmB,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAChI,CAAC,gBAAgB,IAAI,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,cAAc,EAAE,kBAAkB,CAAC,MAAM,CAAC,cAAc,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GACjH,EAAC,YAAY,EAAE,kBAAkB,CAAC,MAAM,CAAC,YAAY,IAAI,EAAE,EAAC,GAC5D,EAAC,cAAc,EAAE,kBAAkB,CAAC,MAAM,CAAC,cAAc,IAAI,EAAE,EAAC,CACpE;qBACF,CAAC;oBACmC,WAAM,IAAA,oBAAU,EAAC,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,EAAE,iBAAiB,CAAC,EAAA;;oBAAvG,KAA+B,SAAwE,EAAtG,gBAAgB,sBAAA,EAAE,QAAQ,cAAA;oBAG3B,oBAAoB,GAAG,IAAA,oCAA0B,EAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;oBAC7E,qBAAqB,GAAwB;wBACjD,gBAAgB,kBAAA;wBAChB,cAAc,EAAE;4BACd,GAAG,EAAE,kBAAkB,CAAC,GAAG,CAAC,cAAc;4BAC1C,MAAM,EAAE,oBAAoB;yBAC7B;wBACD,QAAQ,UAAA;wBACR,aAAa,EAAE;4BACb,gBAAgB,EAAE,kBAAkB,CAAC,GAAG,CAAC,gBAAgB;4BACzD,YAAY,EAAE,OAAO,CAAC,YAAY;4BAClC,cAAc,EAAE,OAAO,CAAC,cAAc;4BACtC,UAAU,EAAE,OAAO,CAAC,UAAU;4BAC9B,WAAW,EAAE,YAAY,CAAC,WAAW;4BACrC,UAAU,EAAE,YAAY,CAAC,UAAU;4BACnC,QAAQ,EAAE,IAAA,qBAAa,EAAC,YAAY,CAAC,YAAY,CAAC;4BAClD,eAAe,EAAE,kBAAkB,CAAC,GAAG,CAAC,eAAe;yBACxD;wBACD,QAAQ,EAAE,kBAAkB,CAAC,GAAG,CAAC,QAAQ;wBACzC,4BAA4B,EAAE,YAAY,CAAC,mBAAmB;wBAC9D,WAAW,EAAE,kBAAkB,CAAC,GAAG,CAAC,WAAW;wBAC/C,YAAY,EAAE,YAAY,CAAC,YAAY;qBACxC,CAAC;oBAGF,WAAO,IAAA,4BAAmB,EAAC,OAAO,CAAC,QAAQ,EAAE,qBAAqB,EAAE,IAAI,CAAC,EAAC;;;;CAC3E;AA/CD,8BA+CC","sourcesContent":["import saveScreen from './saveScreen';\nimport {executeImageCompare} from '../methods/images';\nimport {checkIsMobile} from '../helpers/utils';\nimport {ImageCompareOptions, ImageCompareResult} from '../methods/images.interfaces';\nimport {Methods} from '../methods/methods.interface';\nimport {InstanceData} from '../methods/instanceData.interfaces';\nimport {Folders} from '../base.interface';\nimport {CheckScreenOptions, SaveScreenOptions} from './screen.interfaces';\nimport {screenMethodCompareOptions} from '../helpers/options';\n\n/**\n * Compare an image of the viewport of the screen\n */\nexport default async function checkScreen(\n  methods: Methods,\n  instanceData: InstanceData,\n  folders: Folders,\n  tag: string,\n  checkScreenOptions: CheckScreenOptions,\n): Promise<ImageCompareResult | number> {\n\n  // 1.  Take the actual screenshot and retrieve the needed data\n  const saveScreenOptions: SaveScreenOptions = {\n    wic: checkScreenOptions.wic,\n    method: {\n      ...('disableCSSAnimation' in checkScreenOptions.method ? {disableCSSAnimation: checkScreenOptions.method.disableCSSAnimation} : {}),\n      ...('hideScrollBars' in checkScreenOptions.method ? {hideScrollBars: checkScreenOptions.method.hideScrollBars} : {}),\n      ...{hideElements: checkScreenOptions.method.hideElements || []},\n      ...{removeElements: checkScreenOptions.method.removeElements || []},\n    }\n  };\n  const {devicePixelRatio, fileName} = await saveScreen(methods, instanceData, folders, tag, saveScreenOptions);\n\n  // 2a. Determine the compare options\n  const methodCompareOptions = screenMethodCompareOptions(checkScreenOptions.method);\n  const executeCompareOptions: ImageCompareOptions = {\n    devicePixelRatio,\n    compareOptions: {\n      wic: checkScreenOptions.wic.compareOptions,\n      method: methodCompareOptions,\n    },\n    fileName,\n    folderOptions: {\n      autoSaveBaseline: checkScreenOptions.wic.autoSaveBaseline,\n      actualFolder: folders.actualFolder,\n      baselineFolder: folders.baselineFolder,\n      diffFolder: folders.diffFolder,\n      browserName: instanceData.browserName,\n      deviceName: instanceData.deviceName,\n      isMobile: checkIsMobile(instanceData.platformName),\n      savePerInstance: checkScreenOptions.wic.savePerInstance,\n    },\n    logLevel: checkScreenOptions.wic.logLevel,\n    isAndroidNativeWebScreenshot: instanceData.nativeWebScreenshot,\n    isHybridApp: checkScreenOptions.wic.isHybridApp,\n    platformName: instanceData.platformName,\n  };\n\n  // 2b Now execute the compare and return the data\n  return executeImageCompare(methods.executor, executeCompareOptions, true);\n}\n"]}